input {
  beats {
    port => 5044
    #ssl => true
    #ssl_certificate => "/etc/pki/tls/certs/logstash-beats.crt"
    #ssl_key => "/etc/pki/tls/private/logstash-beats.key"
  }
  tcp {
    type => "yii_log"
    port => 5045
    codec => "json"
  }
}
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
      mutate {
        add_field => { "IndexType" => "syslog" }
      }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}
filter {
  if [type] == "nginx" {
#    grok {
#      #match => { "message" => "%{NGINXACCESS}" }
#      match => { "message" => "%{GREEDYDATA:syslog_message}" }
#    }

#log_format main '[$time_local] "$host" "$remote_addr" "$status" "$request_time" "$upstream_response_time" "$bytes_sent" "$request" "$http_referer"';
    #if [fileset][name] == "access" {
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => "%{NGINX_ACCESS}" }
        #match => { "message" => "\[%{HTTPDATE:[nginx][access][time]}\] \"%{DATA:[nginx][access][target_host]}\" \"%{IPORHOST:[nginx][access][remote_ip]}\" \"%{DATA:[nginx][access][response_code]}\" \"%{NUMBER:[nginx][access][request_time]}\" \"%{DATA:[nginx][access][upstream_request_time]}\" \"%{NUMBER:[nginx][access][body_sent][bytes]}\" \"%{DATA:[nginx][access][url]}\" \"%{DATA:[nginx][access][referrer]}\"" }
        #match => { "message" => "\[%{HTTPDATE:[nginx][access][time]}\] \"%{DATA:[nginx][access][target_host]}\" \"%{IPORHOST:[nginx][access][remote_ip]}\" \"%{NUMBER:[nginx][access][response_code]}\" \"%{NUMBER:[nginx][access][request_time]}\" \"%{NUMBER:[nginx][access][upstream_request_time]}|0\" \"%{NUMBER:[nginx][access][body_sent][bytes]}\" \"%{DATA:[nginx][access][url]}\" \"%{DATA:[nginx][access][referrer]}\"" }
        #match => { "message" => "\[%{HTTPDATE:[nginx][access][time]}\] \"%{DATA:[nginx][access][target_host]}\" \"%{IPORHOST:[nginx][access][remote_ip]}\" \"%{NUMBER:[nginx][access][response_code]}\" \"%{NUMBER:[nginx][access][request_time]}\" \"%{NUMBER:[nginx][access][upstream_request_time]}\" \"%{NUMBER:[nginx][access][body_sent][bytes]}\" \"%{DATA:[nginx][access][url]}\" \"%{DATA:[nginx][access][referrer]}\"" }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
        add_field => { "IndexType" => "ngaccess" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
        target => "[nginx][access][geoip]"
      }
    #}
  }
}
filter {
  if [type] == "nginx-error" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { "message" => "%{NGINX_ERROR}" }
      remove_field => "message"
    }
      mutate {
        add_field => { "IndexType" => "ngerror" }
      }
#      geoip {
#        source => "[nginx][access][remote_ip]"
#        target => "[nginx][access][geoip]"
#      }
  
  }
}

filter {
  if [type] == "yii_log" {
    grok {
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
      mutate {
        add_field => { "IndexType" => "yiilog" }
      }
  }
}

#output {
#  if [type] == "yii_log" { 
#    elasticsearch {
#      hosts => ["elasticsearch:9200"]
#      manage_template => false
#      index => "tcp-%{IndexType}-%{+YYYY.MM.dd}"
#      #document_type => "%{[@metadata][type]}"
#    }
#  } else {
#    elasticsearch {
#      hosts => ["elasticsearch:9200"]
#      manage_template => false
#      index => "filebeat-%{IndexType}-%{+YYYY.MM.dd}"
#      #document_type => "%{[@metadata][type]}"
#    }
#  }
#}
output {
  # stdout { codec => rubydebug }
  if [type] == "yii_log" { 
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      manage_template => false
      index => "tcp-%{+YYYY.MM.dd}"
      #document_type => "%{[@metadata][type]}"
    }
  }
  if "filebeat" in [tags] {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        index => "filebeat-%{+YYYY.MM.dd}"
        manage_template => true
        template => "/config-dir/templates/filebeat.template.json"
        template_name => "filebeat"
    }
  }
  if "topbeat" in [tags] {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        index => "topbeat-%{+YYYY.MM.dd}"
        manage_template => true
        template => "/config-dir/templates/topbeat.template.json"
        template_name => "topbeat"
    }
  }
  if "packetbeat" in [tags] {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        index => "packetbeat-%{+YYYY.MM.dd}"
        manage_template => true
        template => "/config-dir/templates/packetbeat.template.json"
        template_name => "packetbeat"
    }
  }
}
